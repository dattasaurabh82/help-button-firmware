name: Build and Release Firmware

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write

jobs:
  validate:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Validate tag format
        run: |
          if [[ ! ${{ github.ref_name }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Invalid tag format. Use: v1.2.3 or v1.2.3-beta"
            exit 1
          fi

  release:
    needs: validate
    runs-on: ubuntu-latest
    permissions:
      contents: write    # Add this
    defaults:
      run:
        working-directory: main/arduino/button_firmware
    steps:
      ###################
      # Configure Environment
      ###################
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history
          token: ${{ secrets.GITHUB_TOKEN }}  # Explicitly set token for push permissions
          ref: main  # Explicitly checkout main branch

      - name: Install Arduino CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR=/usr/local/bin sh
          arduino-cli config init
          arduino-cli core update-index

      - name: Install ESP32 core
        id: install-esp32
        run: |
          arduino-cli config add board_manager.additional_urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
          arduino-cli core update-index
          arduino-cli core install esp32:esp32

      ###################
      # Build Firmware
      ###################
      - name: Create config.h
        run: |
          echo "#ifndef CONFIG_H" > config.h
          echo "#define CONFIG_H" >> config.h
          echo "#define PRODUCT_KEY ${{ secrets.PRODUCT_KEY }}" >> config.h
          echo "#define BATCH_ID ${{ secrets.BATCH_ID }}" >> config.h
          echo "#endif" >> config.h
          ls -l

      - name: Clean and create binary directory
        run: |
          rm -rf binary
          mkdir -p binary
          echo "Build started at: $(date)" > binary/build_info.txt
          echo "Git commit: ${{ github.sha }}" >> binary/build_info.txt
          echo "Version: ${{ github.ref_name }}" >> binary/build_info.txt

      - name: Compile firmware
        id: compile
        run: |
          arduino-cli compile -v \
            --fqbn esp32:esp32:esp32h2:UploadSpeed=921600,CDCOnBoot=default,FlashFreq=64,FlashMode=qio,FlashSize=4M,PartitionScheme=default,DebugLevel=none,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default \
            --output-dir binary \
            button_firmware.ino 2>&1 | tee binary/build_log.txt

      - name: Verify binary files
        run: |
          cd binary
          for file in "button_firmware.ino.bin" "button_firmware.ino.merged.bin"; do
            if [ ! -f "$file" ]; then
              echo "ERROR: Required file $file not found!"
              exit 1
            fi
          done
          ls -la
          cd ..

      - name: Rename binary files
        run: |
          cd binary
          for f in *.ino.*; do 
            if [ -f "$f" ]; then
              mv "$f" "${f/.ino./\.}"
              echo "Renamed: $f â†’ ${f/.ino./\.}"
            fi
          done
          cp button_firmware.merged.bin "button_firmware.merged-${GITHUB_REF_NAME}.bin"
          echo "Renamed and created a copy of the binary with version: button_firmware.merged-${GITHUB_REF_NAME}.bin"
          ls -la
          cd ..
      
      - name: Commit and push binary files in the repository too
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git fetch origin
          git checkout main
          # Debug: Print current directory and files
          pwd
          ls -la
          # Force add all files in binary directory
          git add -f binary/
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          # Debug: Show what's being committed
          git status
          git commit -m "Add compiled firmware binaries for version ${GITHUB_REF_NAME}"
          git push origin main || exit 1
          git push origin :refs/tags/${GITHUB_REF_NAME} || true
          git tag -d ${GITHUB_REF_NAME} || true
          git tag ${GITHUB_REF_NAME}
          git push origin ${GITHUB_REF_NAME}

      ###################
      # Create Release
      ###################
      - name: Create firmware ZIP
        run: | 
          zip -r firmware.zip binary/*
          ls -la
          pwd

      - name: Generate Release Notes
        run: |
          {
            echo "## ESP32-H2 Firmware Release ${{ github.ref_name }}"
            echo "### Build Information"
            echo "- Build Date: $(date)"
            echo "- Commit: ${{ github.sha }}"
            echo "- Builder: ${{ github.actor }}"
            echo ""
            echo "### All compiled firmware binary and other files"
            echo "- firmware.zip contains:"
            cd binary
            for file in *.*; do
              if [ "$file" != "build_log.txt" ]; then
                size=$(ls -l "$file" | awk '{print $5}')
                echo "  - $file ($size bytes)"
              fi
            done
            cd ..
            echo "### Main firmware binary"
            echo "- button_firmware.merged.bin"
            echo ""
          } > release_notes.md
          pwd
          ls -la
          cat release_notes.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: | 
            main/arduino/button_firmware/firmware.zip
            main/arduino/button_firmware/binary/button_firmware.merged-${{ github.ref_name }}.bin 
          body_path: main/arduino/button_firmware/release_notes.md
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}