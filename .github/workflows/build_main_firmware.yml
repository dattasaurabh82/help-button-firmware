name: Build and Release Firmware

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: main/arduino/button_firmware

    steps:
      ###################
      # Configure Environment
      ###################
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Arduino CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR=/usr/local/bin sh
          arduino-cli config init
          arduino-cli core update-index

      - name: Install ESP32 core
        run: |
          arduino-cli config add board_manager.additional_urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
          arduino-cli core update-index
          arduino-cli core install esp32:esp32

      ###################
      # Build Firmware
      ###################
      - name: Clean and create binary directory
        run: |
          rm -rf binary
          mkdir -p binary

      - name: Compile firmware
        run: |
          arduino-cli compile -v \
            --fqbn esp32:esp32:esp32h2:UploadSpeed=921600,CDCOnBoot=default,FlashFreq=64,FlashMode=qio,FlashSize=4M,PartitionScheme=default,DebugLevel=none,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default \
            --output-dir binary \
            button_firmware.ino

      - name: Rename binary files
        run: |
          cd binary
          for f in *.ino.*; do 
            mv "$f" "${f/.ino./\.}"
          done
          cd ..

      ###################
      # Upload Release
      ###################
      - name: Create firmware ZIP
        run: |
          cd binary
          zip -r ../../../firmware.zip *
          cd ..

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: main/arduino/firmware.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}