name: Deploy webflasher to GitHub Pages

on:
  workflow_dispatch:

# on:
#   workflow_dispatch:
#     inputs:
#       version:
#         description: 'Version to deploy (leave empty to use latest tag)'
#         required: false  # Make it optional
#         type: string

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true


jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for tags
      
      # - name: Get version to use
      #   run: |
      #     if [ -z "${{ inputs.version }}" ]; then
      #       # If no version provided, get latest tag
      #       LATEST_TAG=$(git describe --tags --abbrev=0)
      #       echo "VERSION=${LATEST_TAG}" >> $GITHUB_ENV
      #       echo "Using latest tag: ${LATEST_TAG}"
      #     else
      #       # Use provided version
      #       echo "VERSION=${{ inputs.version }}" >> $GITHUB_ENV
      #       echo "Using provided version: ${{ inputs.version }}"
      #     fi

      - name: Get latest tag version
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          echo "VERSION=${LATEST_TAG}" >> $GITHUB_ENV
          echo "Using latest tag: ${LATEST_TAG}"
          echo ""

      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Prepare deployment files
        run: |
          echo "Current Files:"
          tree webflasher/
          echo ""
          # Delete old firmware directory in webflasher
          echo "Deleting old firmware dir ..."
          rm -rf webflasher/firmware
          tree webflasher/
          echo ""
          # Create firmware directory in webflasher
          echo "Deleting old firmware dir ..."
          mkdir -p webflasher/firmware
          tree webflasher/
          echo ""
          # Copy the latest binary file
          echo "Copying latest firmwar from main/arduino/button_firmware/binary/ to webflasher/firmware/"
          cp main/arduino/button_firmware/binary/button_firmware.merged.bin webflasher/firmware/
          ls -la webflasher/firmware/
          echo ""
      
      - name: Update version in manifest.json and the index.html to the last binary release version
        run: |
          # Update manifest.json
          sed -i "s/\"version\": \"[^\"]*\"/\"version\": \"${{ env.VERSION }}\"/" webflasher/manifest.json
          cat webflasher/manifest.json
          # Update index.html
          sed -i "s/VERSION_PLACEHOLDER/${{ env.VERSION }}/" webflasher/index.html
          cat webflasher/index.html
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './webflasher'  # Specifically upload only the webflasher directory

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3